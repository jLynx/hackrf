name: Build

on:    
  workflow_dispatch:

jobs:
  host:
    strategy:
      matrix:
        os: ['windows-latest']

      # Don't cancel all builds when one fails
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies (Windows)
      run: vcpkg install --triplet=x64-windows libusb fftw3 pthreads
      if: matrix.os == 'windows-latest'

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/host/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/host/build
      run: cmake $GITHUB_WORKSPACE/host/ -DCMAKE_BUILD_TYPE=Release
      if: matrix.os != 'windows-latest'

    - name: Configure CMake (Windows)
      working-directory: ${{runner.workspace}}/host/build
      run: cmake $env:GITHUB_WORKSPACE/host/ -DCMAKE_PREFIX_PATH=C:/vcpkg/installed/x64-windows/
      if: matrix.os == 'windows-latest'

    - name: Build
      working-directory: ${{runner.workspace}}/host/build
      run: cmake --build . --config Release

    - name: Create Build Environment (libhackrf)
      run: cmake -E make_directory ${{runner.workspace}}/host/libhackrf/build

    - name: Configure CMake (libhackrf)
      working-directory: ${{runner.workspace}}/host/libhackrf/build
      run: cmake $GITHUB_WORKSPACE/host/libhackrf/ -DCMAKE_BUILD_TYPE=Release
      if: matrix.os != 'windows-latest'

    - name: Configure CMake (libhackrf, Windows)
      working-directory: ${{runner.workspace}}/host/libhackrf/build
      run: cmake $env:GITHUB_WORKSPACE/host/libhackrf/ -DCMAKE_PREFIX_PATH=C:/vcpkg/installed/x64-windows/ -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/install
      if: matrix.os == 'windows-latest'

    - name: Build (libhackrf)
      working-directory: ${{runner.workspace}}/host/libhackrf/build
      run: cmake --build . --config Release

    - name: Install (libhackrf)
      working-directory: ${{runner.workspace}}/host/libhackrf/build
      run: |
        sudo cmake --install . --config Release
      if: matrix.os != 'windows-latest'

    - name: Install (libhackrf, Windows)
      working-directory: ${{runner.workspace}}/host/libhackrf/build
      run: |
        cmake --install . --config Release
      if: matrix.os == 'windows-latest'

    - name: Create Build Environment (hackrf-tools)
      run: cmake -E make_directory ${{runner.workspace}}/host/hackrf-tools/build

    - name: Configure CMake (hackrf-tools)
      working-directory: ${{runner.workspace}}/host/hackrf-tools/build
      run: cmake $GITHUB_WORKSPACE/host/hackrf-tools/ -DCMAKE_BUILD_TYPE=Release
      if: matrix.os != 'windows-latest'

    - name: Configure CMake (hackrf-tools, Windows)
      working-directory: ${{runner.workspace}}/host/hackrf-tools/build
      run: |
        cmake $env:GITHUB_WORKSPACE/host/hackrf-tools/ -DCMAKE_PREFIX_PATH=C:/vcpkg/installed/x64-windows/ -DLIBHACKRF_INCLUDE_DIR=${{runner.workspace}}/install/include/libhackrf -DLIBHACKRF_LIBRARY=${{runner.workspace}}/install/lib/hackrf.lib
      if: matrix.os == 'windows-latest'

    - name: Build (hackrf-tools)
      working-directory: ${{runner.workspace}}/host/hackrf-tools/build
      run: cmake --build . --config Release
      # This step should work on Windows too, but currently MSVC fails to find
      # hackrf.h, despite us having installed it and specified its location in
      # the previous steps above.
      
    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Build Artifacts
        path: ${{runner.workspace}}/host/hackrf-tools/build/src/Release
